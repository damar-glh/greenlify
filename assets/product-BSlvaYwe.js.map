{"version":3,"file":"product-BSlvaYwe.js","sources":["../../src/services/product.js"],"sourcesContent":["import axios from \"axios\";\nimport {PRODUCT_ENDPOINT} from \"@/constants/routesAPI\";\n\nexport const getProducts = async (filters) => {\n    try {\n        let url = PRODUCT_ENDPOINT;\n        if (Object.keys(filters).length > 0) {\n            const queryParams = new URLSearchParams();\n            if (filters.category_name) {\n                queryParams.append('category_name', filters.category_name);\n            }\n            if (filters.min_price !== undefined && filters.min_price !== '') {\n                queryParams.append('min_price', filters.min_price);\n            }\n            if (filters.max_price !== undefined && filters.max_price !== '') {\n                queryParams.append('max_price', filters.max_price);\n            }\n            if (filters.keyword) {\n                queryParams.append('keyword', filters.keyword);\n            }\n            if (filters.page) {\n                const start = (filters.page - 1) * (filters.limit || 4);\n                queryParams.append('start', start + 1);\n            }\n            if (filters.limit) {\n                queryParams.append('limit', filters.limit);\n            }\n            url += `?${queryParams.toString()}`;\n        }\n\n        const response = await axios.get(url);\n        const data = response.data.data;\n        return {\n            categories: data.categories,\n            products: data.pagination.results,\n            pagination: {\n                next: data.pagination.next,\n                previous: data.pagination.previous,\n                per_page: data.pagination.per_page,\n                start_index: data.pagination.start_index,\n                total_data: data.pagination.total_data\n            }\n        };\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || 'Failed to fetch products');\n        } else if (error.request) {\n            throw new Error('No response received from server');\n        } else {\n            throw new Error('Error setting up the request');\n        }\n    }\n}\n\nexport const getProductById = async (id) => {\n    try {\n        const response = await axios.get(`${PRODUCT_ENDPOINT}/${id}`);\n        return response.data.data;\n    } catch (error) {\n        if (error.response) {\n            throw new Error(error.response.data.message || 'Failed to fetch product');\n        } else if (error.request) {\n            throw new Error('No response received from server');\n        } else {\n            throw new Error('Error setting up the request');\n        }\n    }\n}"],"names":["getProducts","filters","url","PRODUCT_ENDPOINT","queryParams","start","data","axios","error","getProductById","id"],"mappings":"+CAGY,MAACA,EAAc,MAAOC,GAAY,CAC1C,GAAI,CACA,IAAIC,EAAMC,EACV,GAAI,OAAO,KAAKF,CAAO,EAAE,OAAS,EAAG,CACjC,MAAMG,EAAc,IAAI,gBAaxB,GAZIH,EAAQ,eACRG,EAAY,OAAO,gBAAiBH,EAAQ,aAAa,EAEzDA,EAAQ,YAAc,QAAaA,EAAQ,YAAc,IACzDG,EAAY,OAAO,YAAaH,EAAQ,SAAS,EAEjDA,EAAQ,YAAc,QAAaA,EAAQ,YAAc,IACzDG,EAAY,OAAO,YAAaH,EAAQ,SAAS,EAEjDA,EAAQ,SACRG,EAAY,OAAO,UAAWH,EAAQ,OAAO,EAE7CA,EAAQ,KAAM,CACd,MAAMI,GAASJ,EAAQ,KAAO,IAAMA,EAAQ,OAAS,GACrDG,EAAY,OAAO,QAASC,EAAQ,CAAC,CACrD,CACgBJ,EAAQ,OACRG,EAAY,OAAO,QAASH,EAAQ,KAAK,EAE7CC,GAAO,IAAIE,EAAY,SAAU,CAAA,EAC7C,CAGQ,MAAME,GADW,MAAMC,EAAM,IAAIL,CAAG,GACd,KAAK,KAC3B,MAAO,CACH,WAAYI,EAAK,WACjB,SAAUA,EAAK,WAAW,QAC1B,WAAY,CACR,KAAMA,EAAK,WAAW,KACtB,SAAUA,EAAK,WAAW,SAC1B,SAAUA,EAAK,WAAW,SAC1B,YAAaA,EAAK,WAAW,YAC7B,WAAYA,EAAK,WAAW,UAC5C,CACS,CACJ,OAAQE,EAAO,CACZ,MAAIA,EAAM,SACA,IAAI,MAAMA,EAAM,SAAS,KAAK,SAAW,0BAA0B,EAClEA,EAAM,QACP,IAAI,MAAM,kCAAkC,EAE5C,IAAI,MAAM,8BAA8B,CAE1D,CACA,EAEaC,EAAiB,MAAOC,GAAO,CACxC,GAAI,CAEA,OADiB,MAAMH,EAAM,IAAI,GAAGJ,CAAgB,IAAIO,CAAE,EAAE,GAC5C,KAAK,IACxB,OAAQF,EAAO,CACZ,MAAIA,EAAM,SACA,IAAI,MAAMA,EAAM,SAAS,KAAK,SAAW,yBAAyB,EACjEA,EAAM,QACP,IAAI,MAAM,kCAAkC,EAE5C,IAAI,MAAM,8BAA8B,CAE1D,CACA"}